// Define database connection via the `DATABASE_URL` env var
datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

// Define custom output path for generated Prisma Client
generator client {
  provider = "prisma-client-js"
  output   = "../app/generated/prisma-client"
}

model Client {
  credits  Decimal
  email    String  @unique
  id       Int     @id @default(autoincrement())
  name     String
  password String
  Order    Order[]

  @@map("clients")
}

model Supplier {
  cnpj          String          @unique
  email         String          @unique
  id            Int             @id @default(autoincrement())
  name          String
  password      String
  credits       Decimal
  DroneInstance DroneInstance[]

  @@map("suppliers")
}

model Order {
  id               Int            @id @default(autoincrement())
  number           Int
  clientId         Int
  status           String
  createdAt        DateTime
  updatedAt        DateTime
  price            Decimal
  pickupLocation   Json
  deliveryLocation Json
  droneInstanceId  Int?
  client           Client         @relation(fields: [clientId], references: [id], onDelete: Cascade)
  droneInstance    DroneInstance? @relation(fields: [droneInstanceId], references: [id])

  @@map("orders")
}

model DroneInstance {
  id         Int        @id @default(autoincrement())
  region     Json
  supplierId Int
  modelId    Int
  model      DroneModel @relation(fields: [modelId], references: [id], onDelete: Cascade)
  supplier   Supplier   @relation(fields: [supplierId], references: [id], onDelete: Cascade)
  Order      Order[]

  @@map("drone_instances")
}

model DroneModel {
  id             Int             @id @default(autoincrement())
  model          String
  weight         Decimal
  size           String
  composition    String
  image          String?
  capacityVolume Decimal
  capacityWeight Decimal
  DroneInstance  DroneInstance[]

  @@map("drone_models")
}
